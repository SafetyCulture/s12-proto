// Code generated by protoc-gen-go. DO NOT EDIT.
// source: valtest.proto

package valtest

import (
	fmt "fmt"
	_ "github.com/SafetyCulture/s12-proto/s12/protobuf/proto"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ValTestMessage struct {
	// returns an error if the string cannot be parsed as a UUID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// we do not support bytes currently for id
	// bytes user_id = 2 [(validator.id) = {}];
	// can validate each repeated item too
	Ids []string `protobuf:"bytes,3,rep,name=ids,proto3" json:"ids,omitempty"`
	// only validate if non-zero value
	MediaId string `protobuf:"bytes,4,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	// returns an error if the string cannot be parsed as a legacy id
	LegacyId string `protobuf:"bytes,5,opt,name=legacy_id,json=legacyId,proto3" json:"legacy_id,omitempty"`
	// InnerMessage can contain a legacy id too
	InnerLegacyId *InnerMessageWithLegacyId `protobuf:"bytes,6,opt,name=inner_legacy_id,json=innerLegacyId,proto3" json:"inner_legacy_id,omitempty"`
	// email validation
	Email string `protobuf:"bytes,11,opt,name=email,proto3" json:"email,omitempty"`
	// optional email address
	OptEmail string `protobuf:"bytes,12,opt,name=opt_email,json=optEmail,proto3" json:"opt_email,omitempty"`
	// validate the max length of a string
	Description string `protobuf:"bytes,21,opt,name=description,proto3" json:"description,omitempty"`
	// validate the min length (max length defaults to current default string len (130))
	Password string `protobuf:"bytes,22,opt,name=password,proto3" json:"password,omitempty"`
	// validate min and max length
	Title string `protobuf:"bytes,23,opt,name=title,proto3" json:"title,omitempty"`
	// validate fixed length
	FixedString string `protobuf:"bytes,24,opt,name=fixed_string,json=fixedString,proto3" json:"fixed_string,omitempty"`
	// validate length in runes instead of bytes
	RuneString string `protobuf:"bytes,25,opt,name=rune_string,json=runeString,proto3" json:"rune_string,omitempty"`
	// replace unsafe chars
	ReplaceString    string `protobuf:"bytes,26,opt,name=replace_string,json=replaceString,proto3" json:"replace_string,omitempty"`
	NotReplaceString string `protobuf:"bytes,27,opt,name=not_replace_string,json=notReplaceString,proto3" json:"not_replace_string,omitempty"`
	// allow additional characters including # as part of the restricted chars list (should be replaced by replace_unsafe)
	AllowString string `protobuf:"bytes,28,opt,name=allow_string,json=allowString,proto3" json:"allow_string,omitempty"`
	// allow symbol category
	SymbolString string `protobuf:"bytes,29,opt,name=symbol_string,json=symbolString,proto3" json:"symbol_string,omitempty"`
	// allow multiple symbol categories
	SymbolsString string `protobuf:"bytes,30,opt,name=symbols_string,json=symbolsString,proto3" json:"symbols_string,omitempty"`
	// allow newlines
	NewlineString string `protobuf:"bytes,31,opt,name=newline_string,json=newlineString,proto3" json:"newline_string,omitempty"`
	// disable encoding validation
	InvalidEncodingString string `protobuf:"bytes,32,opt,name=invalid_encoding_string,json=invalidEncodingString,proto3" json:"invalid_encoding_string,omitempty"`
	// optional string
	OptString string `protobuf:"bytes,33,opt,name=opt_string,json=optString,proto3" json:"opt_string,omitempty"`
	// trimmed string
	TrimString string `protobuf:"bytes,34,opt,name=trim_string,json=trimString,proto3" json:"trim_string,omitempty"`
	// all options
	AllString string `protobuf:"bytes,35,opt,name=all_string,json=allString,proto3" json:"all_string,omitempty"`
	// custom tests for names
	Name    string `protobuf:"bytes,36,opt,name=name,proto3" json:"name,omitempty"`
	ScTitle string `protobuf:"bytes,37,opt,name=sc_title,json=scTitle,proto3" json:"sc_title,omitempty"`
	// this is an example of a definition that will allow many characters but still will replace unsafe chars
	// normally, definitions like this should be avoided as it is unlikely that it will match your data requirements
	// however, as a starting point, with these settings it is very unlikely that user input is rejected unless it is malformed
	ScPermissive   string `protobuf:"bytes,38,opt,name=sc_permissive,json=scPermissive,proto3" json:"sc_permissive,omitempty"`
	NotSanitisePua string `protobuf:"bytes,39,opt,name=not_sanitise_pua,json=notSanitisePua,proto3" json:"not_sanitise_pua,omitempty"`
	SanitisePua    string `protobuf:"bytes,40,opt,name=sanitise_pua,json=sanitisePua,proto3" json:"sanitise_pua,omitempty"`
	SanitiseLength string `protobuf:"bytes,41,opt,name=sanitise_length,json=sanitiseLength,proto3" json:"sanitise_length,omitempty"`
	// field without any validation
	NoValidation string `protobuf:"bytes,50,opt,name=no_validation,json=noValidation,proto3" json:"no_validation,omitempty"`
	// Types that are valid to be assigned to ContactOneof:
	//	*ValTestMessage_Fax
	//	*ValTestMessage_Phone
	ContactOneof isValTestMessage_ContactOneof `protobuf_oneof:"contact_oneof"`
	// Required inner message
	MsgRequired          *InnerMessage                 `protobuf:"bytes,53,opt,name=msg_required,json=msgRequired,proto3" json:"msg_required,omitempty"`
	NestedMessage        *ValTestMessage_NestedMessage `protobuf:"bytes,56,opt,name=nested_message,json=nestedMessage,proto3" json:"nested_message,omitempty"`
	NotSupported         map[string]string             `protobuf:"bytes,57,rep,name=not_supported,json=notSupported,proto3" json:"not_supported,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ValTestMessage) Reset()         { *m = ValTestMessage{} }
func (m *ValTestMessage) String() string { return proto.CompactTextString(m) }
func (*ValTestMessage) ProtoMessage()    {}
func (*ValTestMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_7323c9be40b191b1, []int{0}
}

func (m *ValTestMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValTestMessage.Unmarshal(m, b)
}
func (m *ValTestMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValTestMessage.Marshal(b, m, deterministic)
}
func (m *ValTestMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValTestMessage.Merge(m, src)
}
func (m *ValTestMessage) XXX_Size() int {
	return xxx_messageInfo_ValTestMessage.Size(m)
}
func (m *ValTestMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ValTestMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ValTestMessage proto.InternalMessageInfo

func (m *ValTestMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ValTestMessage) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *ValTestMessage) GetMediaId() string {
	if m != nil {
		return m.MediaId
	}
	return ""
}

func (m *ValTestMessage) GetLegacyId() string {
	if m != nil {
		return m.LegacyId
	}
	return ""
}

func (m *ValTestMessage) GetInnerLegacyId() *InnerMessageWithLegacyId {
	if m != nil {
		return m.InnerLegacyId
	}
	return nil
}

func (m *ValTestMessage) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ValTestMessage) GetOptEmail() string {
	if m != nil {
		return m.OptEmail
	}
	return ""
}

func (m *ValTestMessage) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ValTestMessage) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ValTestMessage) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ValTestMessage) GetFixedString() string {
	if m != nil {
		return m.FixedString
	}
	return ""
}

func (m *ValTestMessage) GetRuneString() string {
	if m != nil {
		return m.RuneString
	}
	return ""
}

func (m *ValTestMessage) GetReplaceString() string {
	if m != nil {
		return m.ReplaceString
	}
	return ""
}

func (m *ValTestMessage) GetNotReplaceString() string {
	if m != nil {
		return m.NotReplaceString
	}
	return ""
}

func (m *ValTestMessage) GetAllowString() string {
	if m != nil {
		return m.AllowString
	}
	return ""
}

func (m *ValTestMessage) GetSymbolString() string {
	if m != nil {
		return m.SymbolString
	}
	return ""
}

func (m *ValTestMessage) GetSymbolsString() string {
	if m != nil {
		return m.SymbolsString
	}
	return ""
}

func (m *ValTestMessage) GetNewlineString() string {
	if m != nil {
		return m.NewlineString
	}
	return ""
}

func (m *ValTestMessage) GetInvalidEncodingString() string {
	if m != nil {
		return m.InvalidEncodingString
	}
	return ""
}

func (m *ValTestMessage) GetOptString() string {
	if m != nil {
		return m.OptString
	}
	return ""
}

func (m *ValTestMessage) GetTrimString() string {
	if m != nil {
		return m.TrimString
	}
	return ""
}

func (m *ValTestMessage) GetAllString() string {
	if m != nil {
		return m.AllString
	}
	return ""
}

func (m *ValTestMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ValTestMessage) GetScTitle() string {
	if m != nil {
		return m.ScTitle
	}
	return ""
}

func (m *ValTestMessage) GetScPermissive() string {
	if m != nil {
		return m.ScPermissive
	}
	return ""
}

func (m *ValTestMessage) GetNotSanitisePua() string {
	if m != nil {
		return m.NotSanitisePua
	}
	return ""
}

func (m *ValTestMessage) GetSanitisePua() string {
	if m != nil {
		return m.SanitisePua
	}
	return ""
}

func (m *ValTestMessage) GetSanitiseLength() string {
	if m != nil {
		return m.SanitiseLength
	}
	return ""
}

func (m *ValTestMessage) GetNoValidation() string {
	if m != nil {
		return m.NoValidation
	}
	return ""
}

type isValTestMessage_ContactOneof interface {
	isValTestMessage_ContactOneof()
}

type ValTestMessage_Fax struct {
	Fax string `protobuf:"bytes,51,opt,name=fax,proto3,oneof"`
}

type ValTestMessage_Phone struct {
	Phone string `protobuf:"bytes,52,opt,name=phone,proto3,oneof"`
}

func (*ValTestMessage_Fax) isValTestMessage_ContactOneof() {}

func (*ValTestMessage_Phone) isValTestMessage_ContactOneof() {}

func (m *ValTestMessage) GetContactOneof() isValTestMessage_ContactOneof {
	if m != nil {
		return m.ContactOneof
	}
	return nil
}

func (m *ValTestMessage) GetFax() string {
	if x, ok := m.GetContactOneof().(*ValTestMessage_Fax); ok {
		return x.Fax
	}
	return ""
}

func (m *ValTestMessage) GetPhone() string {
	if x, ok := m.GetContactOneof().(*ValTestMessage_Phone); ok {
		return x.Phone
	}
	return ""
}

func (m *ValTestMessage) GetMsgRequired() *InnerMessage {
	if m != nil {
		return m.MsgRequired
	}
	return nil
}

func (m *ValTestMessage) GetNestedMessage() *ValTestMessage_NestedMessage {
	if m != nil {
		return m.NestedMessage
	}
	return nil
}

func (m *ValTestMessage) GetNotSupported() map[string]string {
	if m != nil {
		return m.NotSupported
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ValTestMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ValTestMessage_Fax)(nil),
		(*ValTestMessage_Phone)(nil),
	}
}

type ValTestMessage_NestedMessage struct {
	Val                  string   `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	NestedEmail          string   `protobuf:"bytes,54,opt,name=nested_email,json=nestedEmail,proto3" json:"nested_email,omitempty"`
	MemberEmails         []string `protobuf:"bytes,55,rep,name=member_emails,json=memberEmails,proto3" json:"member_emails,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValTestMessage_NestedMessage) Reset()         { *m = ValTestMessage_NestedMessage{} }
func (m *ValTestMessage_NestedMessage) String() string { return proto.CompactTextString(m) }
func (*ValTestMessage_NestedMessage) ProtoMessage()    {}
func (*ValTestMessage_NestedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_7323c9be40b191b1, []int{0, 0}
}

func (m *ValTestMessage_NestedMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValTestMessage_NestedMessage.Unmarshal(m, b)
}
func (m *ValTestMessage_NestedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValTestMessage_NestedMessage.Marshal(b, m, deterministic)
}
func (m *ValTestMessage_NestedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValTestMessage_NestedMessage.Merge(m, src)
}
func (m *ValTestMessage_NestedMessage) XXX_Size() int {
	return xxx_messageInfo_ValTestMessage_NestedMessage.Size(m)
}
func (m *ValTestMessage_NestedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ValTestMessage_NestedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ValTestMessage_NestedMessage proto.InternalMessageInfo

func (m *ValTestMessage_NestedMessage) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

func (m *ValTestMessage_NestedMessage) GetNestedEmail() string {
	if m != nil {
		return m.NestedEmail
	}
	return ""
}

func (m *ValTestMessage_NestedMessage) GetMemberEmails() []string {
	if m != nil {
		return m.MemberEmails
	}
	return nil
}

type ValTestMessage_NestedMessage_InnerNestedMessage struct {
	InnerVal             string   `protobuf:"bytes,1,opt,name=inner_val,json=innerVal,proto3" json:"inner_val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValTestMessage_NestedMessage_InnerNestedMessage) Reset() {
	*m = ValTestMessage_NestedMessage_InnerNestedMessage{}
}
func (m *ValTestMessage_NestedMessage_InnerNestedMessage) String() string {
	return proto.CompactTextString(m)
}
func (*ValTestMessage_NestedMessage_InnerNestedMessage) ProtoMessage() {}
func (*ValTestMessage_NestedMessage_InnerNestedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_7323c9be40b191b1, []int{0, 0, 0}
}

func (m *ValTestMessage_NestedMessage_InnerNestedMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValTestMessage_NestedMessage_InnerNestedMessage.Unmarshal(m, b)
}
func (m *ValTestMessage_NestedMessage_InnerNestedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValTestMessage_NestedMessage_InnerNestedMessage.Marshal(b, m, deterministic)
}
func (m *ValTestMessage_NestedMessage_InnerNestedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValTestMessage_NestedMessage_InnerNestedMessage.Merge(m, src)
}
func (m *ValTestMessage_NestedMessage_InnerNestedMessage) XXX_Size() int {
	return xxx_messageInfo_ValTestMessage_NestedMessage_InnerNestedMessage.Size(m)
}
func (m *ValTestMessage_NestedMessage_InnerNestedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ValTestMessage_NestedMessage_InnerNestedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ValTestMessage_NestedMessage_InnerNestedMessage proto.InternalMessageInfo

func (m *ValTestMessage_NestedMessage_InnerNestedMessage) GetInnerVal() string {
	if m != nil {
		return m.InnerVal
	}
	return ""
}

type OuterMessageUsingNestedMessage struct {
	SomeMessage          *ValTestMessage_NestedMessage `protobuf:"bytes,1,opt,name=some_message,json=someMessage,proto3" json:"some_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *OuterMessageUsingNestedMessage) Reset()         { *m = OuterMessageUsingNestedMessage{} }
func (m *OuterMessageUsingNestedMessage) String() string { return proto.CompactTextString(m) }
func (*OuterMessageUsingNestedMessage) ProtoMessage()    {}
func (*OuterMessageUsingNestedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_7323c9be40b191b1, []int{1}
}

func (m *OuterMessageUsingNestedMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OuterMessageUsingNestedMessage.Unmarshal(m, b)
}
func (m *OuterMessageUsingNestedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OuterMessageUsingNestedMessage.Marshal(b, m, deterministic)
}
func (m *OuterMessageUsingNestedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OuterMessageUsingNestedMessage.Merge(m, src)
}
func (m *OuterMessageUsingNestedMessage) XXX_Size() int {
	return xxx_messageInfo_OuterMessageUsingNestedMessage.Size(m)
}
func (m *OuterMessageUsingNestedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_OuterMessageUsingNestedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_OuterMessageUsingNestedMessage proto.InternalMessageInfo

func (m *OuterMessageUsingNestedMessage) GetSomeMessage() *ValTestMessage_NestedMessage {
	if m != nil {
		return m.SomeMessage
	}
	return nil
}

type InnerMessage struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InnerMessage) Reset()         { *m = InnerMessage{} }
func (m *InnerMessage) String() string { return proto.CompactTextString(m) }
func (*InnerMessage) ProtoMessage()    {}
func (*InnerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_7323c9be40b191b1, []int{2}
}

func (m *InnerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InnerMessage.Unmarshal(m, b)
}
func (m *InnerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InnerMessage.Marshal(b, m, deterministic)
}
func (m *InnerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InnerMessage.Merge(m, src)
}
func (m *InnerMessage) XXX_Size() int {
	return xxx_messageInfo_InnerMessage.Size(m)
}
func (m *InnerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_InnerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_InnerMessage proto.InternalMessageInfo

func (m *InnerMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type InnerMessageWithLegacyId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InnerMessageWithLegacyId) Reset()         { *m = InnerMessageWithLegacyId{} }
func (m *InnerMessageWithLegacyId) String() string { return proto.CompactTextString(m) }
func (*InnerMessageWithLegacyId) ProtoMessage()    {}
func (*InnerMessageWithLegacyId) Descriptor() ([]byte, []int) {
	return fileDescriptor_7323c9be40b191b1, []int{3}
}

func (m *InnerMessageWithLegacyId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InnerMessageWithLegacyId.Unmarshal(m, b)
}
func (m *InnerMessageWithLegacyId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InnerMessageWithLegacyId.Marshal(b, m, deterministic)
}
func (m *InnerMessageWithLegacyId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InnerMessageWithLegacyId.Merge(m, src)
}
func (m *InnerMessageWithLegacyId) XXX_Size() int {
	return xxx_messageInfo_InnerMessageWithLegacyId.Size(m)
}
func (m *InnerMessageWithLegacyId) XXX_DiscardUnknown() {
	xxx_messageInfo_InnerMessageWithLegacyId.DiscardUnknown(m)
}

var xxx_messageInfo_InnerMessageWithLegacyId proto.InternalMessageInfo

func (m *InnerMessageWithLegacyId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type NestedLevel3Message struct {
	OrgId5               string   `protobuf:"bytes,1,opt,name=org_id5,json=orgId5,proto3" json:"org_id5,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NestedLevel3Message) Reset()         { *m = NestedLevel3Message{} }
func (m *NestedLevel3Message) String() string { return proto.CompactTextString(m) }
func (*NestedLevel3Message) ProtoMessage()    {}
func (*NestedLevel3Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_7323c9be40b191b1, []int{4}
}

func (m *NestedLevel3Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NestedLevel3Message.Unmarshal(m, b)
}
func (m *NestedLevel3Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NestedLevel3Message.Marshal(b, m, deterministic)
}
func (m *NestedLevel3Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NestedLevel3Message.Merge(m, src)
}
func (m *NestedLevel3Message) XXX_Size() int {
	return xxx_messageInfo_NestedLevel3Message.Size(m)
}
func (m *NestedLevel3Message) XXX_DiscardUnknown() {
	xxx_messageInfo_NestedLevel3Message.DiscardUnknown(m)
}

var xxx_messageInfo_NestedLevel3Message proto.InternalMessageInfo

func (m *NestedLevel3Message) GetOrgId5() string {
	if m != nil {
		return m.OrgId5
	}
	return ""
}

type NestedLevel2Message struct {
	OrgId4               string               `protobuf:"bytes,1,opt,name=org_id4,json=orgId4,proto3" json:"org_id4,omitempty"`
	OrgNested            *NestedLevel3Message `protobuf:"bytes,2,opt,name=org_nested,json=orgNested,proto3" json:"org_nested,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *NestedLevel2Message) Reset()         { *m = NestedLevel2Message{} }
func (m *NestedLevel2Message) String() string { return proto.CompactTextString(m) }
func (*NestedLevel2Message) ProtoMessage()    {}
func (*NestedLevel2Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_7323c9be40b191b1, []int{5}
}

func (m *NestedLevel2Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NestedLevel2Message.Unmarshal(m, b)
}
func (m *NestedLevel2Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NestedLevel2Message.Marshal(b, m, deterministic)
}
func (m *NestedLevel2Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NestedLevel2Message.Merge(m, src)
}
func (m *NestedLevel2Message) XXX_Size() int {
	return xxx_messageInfo_NestedLevel2Message.Size(m)
}
func (m *NestedLevel2Message) XXX_DiscardUnknown() {
	xxx_messageInfo_NestedLevel2Message.DiscardUnknown(m)
}

var xxx_messageInfo_NestedLevel2Message proto.InternalMessageInfo

func (m *NestedLevel2Message) GetOrgId4() string {
	if m != nil {
		return m.OrgId4
	}
	return ""
}

func (m *NestedLevel2Message) GetOrgNested() *NestedLevel3Message {
	if m != nil {
		return m.OrgNested
	}
	return nil
}

type NestedLevel1Message struct {
	OrgId3               string               `protobuf:"bytes,1,opt,name=org_id3,json=orgId3,proto3" json:"org_id3,omitempty"`
	OrgNested            *NestedLevel2Message `protobuf:"bytes,2,opt,name=org_nested,json=orgNested,proto3" json:"org_nested,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *NestedLevel1Message) Reset()         { *m = NestedLevel1Message{} }
func (m *NestedLevel1Message) String() string { return proto.CompactTextString(m) }
func (*NestedLevel1Message) ProtoMessage()    {}
func (*NestedLevel1Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_7323c9be40b191b1, []int{6}
}

func (m *NestedLevel1Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NestedLevel1Message.Unmarshal(m, b)
}
func (m *NestedLevel1Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NestedLevel1Message.Marshal(b, m, deterministic)
}
func (m *NestedLevel1Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NestedLevel1Message.Merge(m, src)
}
func (m *NestedLevel1Message) XXX_Size() int {
	return xxx_messageInfo_NestedLevel1Message.Size(m)
}
func (m *NestedLevel1Message) XXX_DiscardUnknown() {
	xxx_messageInfo_NestedLevel1Message.DiscardUnknown(m)
}

var xxx_messageInfo_NestedLevel1Message proto.InternalMessageInfo

func (m *NestedLevel1Message) GetOrgId3() string {
	if m != nil {
		return m.OrgId3
	}
	return ""
}

func (m *NestedLevel1Message) GetOrgNested() *NestedLevel2Message {
	if m != nil {
		return m.OrgNested
	}
	return nil
}

type MyReqMessage struct {
	UserId               string               `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OrgNested            *NestedLevel1Message `protobuf:"bytes,2,opt,name=org_nested,json=orgNested,proto3" json:"org_nested,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MyReqMessage) Reset()         { *m = MyReqMessage{} }
func (m *MyReqMessage) String() string { return proto.CompactTextString(m) }
func (*MyReqMessage) ProtoMessage()    {}
func (*MyReqMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_7323c9be40b191b1, []int{7}
}

func (m *MyReqMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MyReqMessage.Unmarshal(m, b)
}
func (m *MyReqMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MyReqMessage.Marshal(b, m, deterministic)
}
func (m *MyReqMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MyReqMessage.Merge(m, src)
}
func (m *MyReqMessage) XXX_Size() int {
	return xxx_messageInfo_MyReqMessage.Size(m)
}
func (m *MyReqMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_MyReqMessage.DiscardUnknown(m)
}

var xxx_messageInfo_MyReqMessage proto.InternalMessageInfo

func (m *MyReqMessage) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *MyReqMessage) GetOrgNested() *NestedLevel1Message {
	if m != nil {
		return m.OrgNested
	}
	return nil
}

type ScimEmail struct {
	Value                string   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScimEmail) Reset()         { *m = ScimEmail{} }
func (m *ScimEmail) String() string { return proto.CompactTextString(m) }
func (*ScimEmail) ProtoMessage()    {}
func (*ScimEmail) Descriptor() ([]byte, []int) {
	return fileDescriptor_7323c9be40b191b1, []int{8}
}

func (m *ScimEmail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScimEmail.Unmarshal(m, b)
}
func (m *ScimEmail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScimEmail.Marshal(b, m, deterministic)
}
func (m *ScimEmail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScimEmail.Merge(m, src)
}
func (m *ScimEmail) XXX_Size() int {
	return xxx_messageInfo_ScimEmail.Size(m)
}
func (m *ScimEmail) XXX_DiscardUnknown() {
	xxx_messageInfo_ScimEmail.DiscardUnknown(m)
}

var xxx_messageInfo_ScimEmail proto.InternalMessageInfo

func (m *ScimEmail) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ScimUser struct {
	Emails               []*ScimEmail `protobuf:"bytes,5,rep,name=emails,proto3" json:"emails,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ScimUser) Reset()         { *m = ScimUser{} }
func (m *ScimUser) String() string { return proto.CompactTextString(m) }
func (*ScimUser) ProtoMessage()    {}
func (*ScimUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_7323c9be40b191b1, []int{9}
}

func (m *ScimUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScimUser.Unmarshal(m, b)
}
func (m *ScimUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScimUser.Marshal(b, m, deterministic)
}
func (m *ScimUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScimUser.Merge(m, src)
}
func (m *ScimUser) XXX_Size() int {
	return xxx_messageInfo_ScimUser.Size(m)
}
func (m *ScimUser) XXX_DiscardUnknown() {
	xxx_messageInfo_ScimUser.DiscardUnknown(m)
}

var xxx_messageInfo_ScimUser proto.InternalMessageInfo

func (m *ScimUser) GetEmails() []*ScimEmail {
	if m != nil {
		return m.Emails
	}
	return nil
}

func init() {
	proto.RegisterType((*ValTestMessage)(nil), "valtest.ValTestMessage")
	proto.RegisterMapType((map[string]string)(nil), "valtest.ValTestMessage.NotSupportedEntry")
	proto.RegisterType((*ValTestMessage_NestedMessage)(nil), "valtest.ValTestMessage.NestedMessage")
	proto.RegisterType((*ValTestMessage_NestedMessage_InnerNestedMessage)(nil), "valtest.ValTestMessage.NestedMessage.InnerNestedMessage")
	proto.RegisterType((*OuterMessageUsingNestedMessage)(nil), "valtest.OuterMessageUsingNestedMessage")
	proto.RegisterType((*InnerMessage)(nil), "valtest.InnerMessage")
	proto.RegisterType((*InnerMessageWithLegacyId)(nil), "valtest.InnerMessageWithLegacyId")
	proto.RegisterType((*NestedLevel3Message)(nil), "valtest.NestedLevel3Message")
	proto.RegisterType((*NestedLevel2Message)(nil), "valtest.NestedLevel2Message")
	proto.RegisterType((*NestedLevel1Message)(nil), "valtest.NestedLevel1Message")
	proto.RegisterType((*MyReqMessage)(nil), "valtest.MyReqMessage")
	proto.RegisterType((*ScimEmail)(nil), "valtest.ScimEmail")
	proto.RegisterType((*ScimUser)(nil), "valtest.ScimUser")
}

func init() {
	proto.RegisterFile("valtest.proto", fileDescriptor_7323c9be40b191b1)
}

var fileDescriptor_7323c9be40b191b1 = []byte{
	// 1344 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x96, 0x5d, 0x6f, 0x13, 0x47,
	0x17, 0xc7, 0x3d, 0x7e, 0xcb, 0x66, 0xbc, 0x0e, 0x61, 0x1e, 0x08, 0xfb, 0x2c, 0x2f, 0x6b, 0x1c,
	0xf2, 0xc4, 0x81, 0x27, 0x89, 0xbd, 0x89, 0x81, 0x9a, 0x36, 0xb5, 0xd2, 0x22, 0x25, 0x55, 0xa0,
	0xd1, 0x04, 0x68, 0xd4, 0x8b, 0x6e, 0x37, 0xde, 0x89, 0xb3, 0xed, 0xbe, 0x98, 0x9d, 0x71, 0x20,
	0x6a, 0x8b, 0xaa, 0x5e, 0xf2, 0xc9, 0xaa, 0x7e, 0x8a, 0x5e, 0x56, 0x32, 0x17, 0x15, 0x97, 0xbe,
	0xaa, 0xe6, 0xc5, 0x6b, 0x1b, 0x82, 0x44, 0xef, 0x76, 0xce, 0xf9, 0xfd, 0xe7, 0x9c, 0x39, 0x73,
	0x66, 0x66, 0x61, 0xf9, 0xd4, 0x0d, 0x18, 0xa1, 0x6c, 0xad, 0x97, 0xc4, 0x2c, 0x46, 0x33, 0x6a,
	0x68, 0x56, 0x69, 0xc3, 0x5e, 0x17, 0xb6, 0xa3, 0xfe, 0xb1, 0xfc, 0x58, 0x3f, 0x75, 0x03, 0xdf,
	0x73, 0x59, 0x9c, 0x48, 0xb8, 0xfa, 0xf7, 0x1c, 0x9c, 0x7b, 0xe6, 0x06, 0x4f, 0x08, 0x65, 0x8f,
	0x08, 0xa5, 0x6e, 0x97, 0xa0, 0x4b, 0x30, 0xeb, 0x7b, 0x06, 0xa8, 0x80, 0xda, 0xec, 0x76, 0xfe,
	0xf5, 0x1b, 0x2b, 0x83, 0xb3, 0xbe, 0x87, 0x16, 0x60, 0xce, 0xf7, 0xa8, 0x91, 0xab, 0xe4, 0x52,
	0x33, 0x37, 0xa0, 0x9b, 0x50, 0x0b, 0x89, 0xe7, 0xbb, 0x8e, 0xef, 0x19, 0x79, 0xa1, 0x29, 0xbe,
	0x7e, 0x63, 0x65, 0x35, 0x80, 0x67, 0x84, 0x7d, 0xd7, 0x43, 0x8b, 0x70, 0x36, 0x20, 0x5d, 0xb7,
	0x73, 0xc6, 0x99, 0xc2, 0x98, 0x31, 0x00, 0xd6, 0xa4, 0x63, 0xd7, 0x43, 0xbb, 0xf0, 0x82, 0x1f,
	0x45, 0x24, 0x71, 0xc6, 0x68, 0xb1, 0x02, 0x6a, 0x25, 0xfb, 0xe6, 0xda, 0x68, 0x79, 0xbb, 0xdc,
	0xaf, 0xb2, 0xfc, 0xc6, 0x67, 0x27, 0x7b, 0x4a, 0x8b, 0xcb, 0x42, 0x39, 0x1a, 0x22, 0x13, 0x16,
	0x48, 0xe8, 0xfa, 0x81, 0x51, 0x92, 0x6b, 0x78, 0x3b, 0xb0, 0x32, 0x58, 0x9a, 0x78, 0x2e, 0x71,
	0x8f, 0x39, 0xd2, 0xaf, 0xcb, 0x5c, 0xde, 0x0e, 0x44, 0xbe, 0x5a, 0xdc, 0x63, 0x0f, 0x05, 0xf4,
	0x7f, 0x58, 0xf2, 0x08, 0xed, 0x24, 0x7e, 0x8f, 0xf9, 0x71, 0x64, 0x5c, 0x16, 0x18, 0x1c, 0x0e,
	0xac, 0xa2, 0x99, 0x6f, 0xdd, 0x6b, 0xd6, 0xf1, 0xa4, 0x1b, 0xd9, 0x50, 0xeb, 0xb9, 0x94, 0xbe,
	0x88, 0x13, 0xcf, 0x58, 0x10, 0xe8, 0xc2, 0x6f, 0x6f, 0x2c, 0x64, 0x66, 0xef, 0xb7, 0x5a, 0xfa,
	0xab, 0x5b, 0xdf, 0xdd, 0xf9, 0xfe, 0xa7, 0x5f, 0x3e, 0xfb, 0xf9, 0xc1, 0xa7, 0x5b, 0x38, 0xe5,
	0x50, 0x05, 0x16, 0x98, 0xcf, 0x02, 0x62, 0x5c, 0x99, 0x9c, 0x7b, 0xa3, 0xd5, 0xac, 0x63, 0xe9,
	0x40, 0xb7, 0xa1, 0x7e, 0xec, 0xbf, 0x24, 0x9e, 0x43, 0x59, 0xe2, 0x47, 0x5d, 0xc3, 0x10, 0xe0,
	0xcc, 0x70, 0x60, 0xe5, 0x4c, 0xb0, 0x89, 0x4b, 0xc2, 0x79, 0x20, 0x7c, 0x3c, 0xdf, 0xa4, 0x1f,
	0x91, 0x11, 0xfa, 0x5f, 0x81, 0x96, 0x86, 0x03, 0x6b, 0xc6, 0x04, 0x9b, 0x15, 0xd0, 0xce, 0x63,
	0xc8, 0xfd, 0x8a, 0x5e, 0x85, 0x73, 0x09, 0xe9, 0x05, 0x6e, 0x27, 0x15, 0x98, 0xb2, 0x0e, 0xc3,
	0x81, 0x95, 0xad, 0x01, 0x5c, 0x56, 0x5e, 0x85, 0xdb, 0x10, 0x45, 0x31, 0x73, 0xde, 0x91, 0x5c,
	0x95, 0xa5, 0x1d, 0xf2, 0xd2, 0xce, 0x47, 0x31, 0xc3, 0x53, 0x9a, 0x55, 0xa8, 0xbb, 0x41, 0x10,
	0xbf, 0x18, 0xd1, 0xd7, 0xc6, 0xab, 0xac, 0x81, 0x56, 0xf6, 0xd5, 0x22, 0x2e, 0x09, 0xbf, 0xc2,
	0xef, 0xc0, 0x32, 0x3d, 0x0b, 0x8f, 0xe2, 0x60, 0xc4, 0x5f, 0x1f, 0x27, 0xd4, 0xce, 0x62, 0x5d,
	0x3a, 0x15, 0xbc, 0x0e, 0xe7, 0xe4, 0x98, 0x8e, 0xe8, 0x1b, 0x82, 0xd6, 0x86, 0x03, 0x2b, 0xdf,
	0xce, 0xb7, 0x0b, 0x58, 0x4d, 0x46, 0xc7, 0xeb, 0x8d, 0xc8, 0x8b, 0xc0, 0x1f, 0x17, 0xc8, 0x1a,
	0x4f, 0xbf, 0x03, 0x70, 0x59, 0x79, 0x15, 0xbe, 0x05, 0xaf, 0xf8, 0x91, 0x38, 0x26, 0x0e, 0x89,
	0x3a, 0xb1, 0xe7, 0x47, 0xdd, 0x91, 0xae, 0x32, 0xd6, 0xed, 0x67, 0xf0, 0x65, 0x85, 0x3d, 0x54,
	0x94, 0xd2, 0x2f, 0x41, 0xc8, 0x3b, 0x4c, 0x49, 0x6e, 0x8e, 0x25, 0x1a, 0xc0, 0xbc, 0xf7, 0x14,
	0xb6, 0x0c, 0x4b, 0x2c, 0xf1, 0xc3, 0x11, 0x57, 0x1d, 0x73, 0xf3, 0x00, 0x43, 0xee, 0x52, 0xe0,
	0x0e, 0x84, 0x6e, 0x90, 0x56, 0x66, 0x51, 0x70, 0x2b, 0xc3, 0x81, 0xb5, 0xa4, 0x65, 0xe6, 0x33,
	0x66, 0xfe, 0xee, 0xaa, 0x5d, 0xaf, 0x64, 0x6a, 0xa0, 0x0e, 0x5a, 0x60, 0xab, 0x5d, 0x6c, 0x67,
	0xdb, 0x85, 0x36, 0x68, 0xe7, 0xda, 0xf9, 0x9d, 0xcc, 0x7e, 0xe6, 0x30, 0x83, 0x67, 0xdd, 0x20,
	0x48, 0x33, 0xcb, 0x47, 0x6e, 0x48, 0x8c, 0x5b, 0x62, 0x8e, 0x8b, 0xc3, 0x81, 0x55, 0xd6, 0x80,
	0x99, 0x6b, 0x35, 0xeb, 0x7c, 0x53, 0x96, 0x57, 0xb1, 0x70, 0xa3, 0x15, 0xa8, 0xd1, 0x8e, 0x23,
	0xdb, 0x73, 0x49, 0xa0, 0x73, 0xc3, 0x81, 0x05, 0x35, 0x60, 0xe6, 0x5b, 0xcd, 0x7a, 0xbd, 0x06,
	0xf0, 0x0c, 0xed, 0x3c, 0x11, 0x4d, 0xfa, 0x25, 0x2c, 0xd3, 0x8e, 0xd3, 0x23, 0x49, 0xe8, 0x53,
	0xea, 0x9f, 0x12, 0xe3, 0x7f, 0x82, 0xb7, 0x86, 0x03, 0xeb, 0xaa, 0x06, 0xcc, 0x42, 0xab, 0x51,
	0xe7, 0x82, 0x3a, 0x98, 0x4c, 0xec, 0x10, 0x60, 0x9d, 0x76, 0xf6, 0x53, 0x11, 0xb2, 0x21, 0xef,
	0x20, 0x87, 0xba, 0x91, 0xcf, 0x7c, 0x4a, 0x9c, 0x5e, 0xdf, 0x35, 0x96, 0xc7, 0x7b, 0xaa, 0x81,
	0xc3, 0x0c, 0x9e, 0x8b, 0x62, 0x76, 0xa0, 0x80, 0xfd, 0xbe, 0x8b, 0xee, 0x40, 0x7d, 0x8a, 0xaf,
	0x4d, 0xf1, 0x00, 0x97, 0xe8, 0x04, 0xbc, 0x09, 0x2f, 0xa4, 0x70, 0x40, 0xa2, 0x2e, 0x3b, 0x31,
	0x56, 0xc6, 0x67, 0x44, 0x03, 0x26, 0xb0, 0x0f, 0x01, 0x9e, 0x1b, 0x31, 0x7b, 0x02, 0x41, 0x8b,
	0xb0, 0x1c, 0xc5, 0x8e, 0xba, 0x30, 0xf9, 0x3d, 0x60, 0x73, 0x0d, 0xd6, 0xa3, 0xf8, 0x59, 0x6a,
	0x43, 0x08, 0xe6, 0x8e, 0xdd, 0x97, 0xc6, 0x06, 0x77, 0xed, 0x64, 0x30, 0x1f, 0xf0, 0xc3, 0xdd,
	0x3b, 0x89, 0x23, 0x62, 0x6c, 0x8e, 0x93, 0x32, 0xb3, 0x8d, 0xc6, 0x4e, 0x06, 0x4b, 0x07, 0xda,
	0x82, 0x7a, 0x48, 0xbb, 0x4e, 0x42, 0x9e, 0xf7, 0xfd, 0x84, 0x78, 0x46, 0x53, 0xdc, 0x74, 0x97,
	0xcf, 0xbd, 0xe9, 0xb6, 0xf3, 0xbf, 0x0f, 0x2c, 0x80, 0x4b, 0x21, 0xed, 0x62, 0xc5, 0xa3, 0x3d,
	0xde, 0xd2, 0x94, 0x11, 0xcf, 0x09, 0x25, 0x64, 0xdc, 0x17, 0x33, 0x2c, 0xa5, 0x33, 0x4c, 0xdf,
	0xe9, 0x6b, 0x8f, 0x05, 0xad, 0x46, 0xbc, 0xe3, 0x27, 0x86, 0xe8, 0x31, 0x5f, 0x28, 0x73, 0x68,
	0xbf, 0xd7, 0x8b, 0x13, 0x46, 0x3c, 0xe3, 0x93, 0x4a, 0xae, 0x56, 0xb2, 0x57, 0x3e, 0x38, 0x59,
	0xcc, 0x0e, 0x46, 0xec, 0xc3, 0x88, 0x25, 0x67, 0xbc, 0x26, 0x63, 0x93, 0xf9, 0x07, 0x80, 0xe5,
	0xa9, 0x80, 0xe8, 0x3a, 0xcc, 0x9d, 0xba, 0x81, 0x7a, 0x53, 0xe4, 0xc5, 0x54, 0x68, 0xf0, 0xe6,
	0xc0, 0xdc, 0x8e, 0x96, 0xa1, 0xae, 0x96, 0x23, 0xef, 0xe5, 0xbb, 0x13, 0xf7, 0x76, 0x49, 0x7a,
	0xe4, 0xc5, 0xdc, 0x80, 0xe5, 0x90, 0x84, 0x47, 0x24, 0x91, 0x20, 0x35, 0xee, 0x89, 0xe7, 0x48,
	0xff, 0x73, 0x60, 0x65, 0xff, 0x1a, 0x58, 0x05, 0xa1, 0xd0, 0x25, 0x22, 0x14, 0xd4, 0xdc, 0x82,
	0x48, 0x54, 0x73, 0x3a, 0xa1, 0x1a, 0x9c, 0x95, 0xaf, 0xcd, 0x07, 0xd2, 0xd2, 0x84, 0xf7, 0x99,
	0x1b, 0x98, 0x9f, 0xc3, 0x8b, 0xef, 0xad, 0x17, 0xcd, 0xc3, 0xdc, 0x8f, 0xe4, 0x4c, 0x0a, 0x31,
	0xff, 0x44, 0x97, 0x60, 0xe1, 0xd4, 0x0d, 0xfa, 0xc4, 0xc8, 0x0a, 0x9b, 0x1c, 0xb4, 0xb2, 0xf7,
	0xc1, 0xf6, 0x05, 0x58, 0xee, 0xc4, 0x11, 0x73, 0x3b, 0xcc, 0x89, 0x23, 0x12, 0x1f, 0x57, 0x7f,
	0x80, 0x37, 0xbe, 0xee, 0xb3, 0x74, 0x7f, 0x9f, 0x52, 0x3f, 0xea, 0x4e, 0x67, 0xb7, 0x03, 0x75,
	0x1a, 0x87, 0x24, 0xdd, 0x5c, 0xf0, 0x6f, 0x36, 0xb7, 0xc4, 0xa5, 0x6a, 0x50, 0xbd, 0x05, 0xf5,
	0xc9, 0x5e, 0x9a, 0x7e, 0xdb, 0x7f, 0xe5, 0x7d, 0x95, 0xf5, 0xbd, 0xaa, 0x0d, 0x8d, 0x0f, 0xbd,
	0xad, 0x68, 0x61, 0x42, 0x31, 0x7a, 0xb5, 0xb9, 0xe6, 0x1e, 0xfc, 0x8f, 0x8c, 0xbb, 0x47, 0x4e,
	0x49, 0xb0, 0x31, 0x0a, 0x50, 0x81, 0x33, 0x71, 0xd2, 0x75, 0x7c, 0xaf, 0xa9, 0x34, 0xea, 0xc5,
	0x6a, 0xe2, 0x62, 0x9c, 0x74, 0x77, 0xbd, 0x66, 0x95, 0x4d, 0x09, 0xed, 0xf7, 0x84, 0x9b, 0xd3,
	0xc2, 0x4d, 0x25, 0xdc, 0x44, 0x0f, 0x20, 0xe4, 0x84, 0xec, 0x07, 0x51, 0xe7, 0x92, 0x7d, 0x2d,
	0xad, 0xc9, 0x39, 0xc9, 0xe0, 0xd9, 0x38, 0x51, 0x95, 0x7d, 0x27, 0x6a, 0xe3, 0xbd, 0xa8, 0x1b,
	0xd3, 0x51, 0x37, 0x54, 0xd4, 0x8d, 0x8f, 0x8f, 0x6a, 0x9f, 0x13, 0x35, 0x84, 0xfa, 0xa3, 0x33,
	0x4c, 0x9e, 0x4f, 0x84, 0xeb, 0x53, 0x92, 0x38, 0x69, 0x45, 0x55, 0x38, 0x1b, 0x17, 0xb9, 0x7d,
	0xd7, 0xfb, 0xf8, 0x70, 0x8d, 0x73, 0xc2, 0x2d, 0xc3, 0xd9, 0x83, 0x8e, 0x1f, 0xca, 0xb3, 0x62,
	0x8e, 0x3a, 0x32, 0x37, 0xf9, 0x17, 0x24, 0x4c, 0xd5, 0xbb, 0x50, 0xe3, 0xe0, 0x53, 0x4a, 0x12,
	0x74, 0x1b, 0x16, 0xd5, 0x61, 0x2a, 0x88, 0x63, 0x8f, 0xd2, 0x68, 0xe9, 0x5c, 0x58, 0x11, 0xdb,
	0x7b, 0xdf, 0x7e, 0xd5, 0xf5, 0xd9, 0x49, 0xff, 0x68, 0xad, 0x13, 0x87, 0xeb, 0x07, 0xee, 0x31,
	0x61, 0x67, 0x5f, 0xf4, 0x03, 0xd6, 0x4f, 0xc8, 0x3a, 0x6d, 0xd8, 0xab, 0xf2, 0x1f, 0x73, 0xfa,
	0x97, 0xb3, 0xb3, 0xda, 0x25, 0xd1, 0x6a, 0x37, 0x4e, 0xff, 0x3c, 0xd7, 0xd5, 0xfc, 0x47, 0x45,
	0xe1, 0xdf, 0xf8, 0x27, 0x00, 0x00, 0xff, 0xff, 0xa3, 0xf4, 0x06, 0xcc, 0xc0, 0x0a, 0x00, 0x00,
}
