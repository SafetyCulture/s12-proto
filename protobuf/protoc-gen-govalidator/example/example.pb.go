// Code generated by protoc-gen-go. DO NOT EDIT.
// source: example.proto

package example

import (
	fmt "fmt"
	_ "github.com/SafetyCulture/s12-proto/s12/protobuf/proto"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ExampleMessage struct {
	// returns an error if the string cannot be parsed as a UUID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// bytes can also be parsed as UUID with support for gogo
	UserId []byte `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// should be a valid email address
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	// integers can be greater than a value
	Age int32 `protobuf:"varint,4,opt,name=age,proto3" json:"age,omitempty"`
	// integers can be less than a value
	Speed int64 `protobuf:"varint,5,opt,name=speed,proto3" json:"speed,omitempty"`
	// integers greater/less than or equal, the can also be combined
	Score int32 `protobuf:"varint,6,opt,name=score,proto3" json:"score,omitempty"`
	// validation is created for all messages
	Inner *InnerMessage `protobuf:"bytes,7,opt,name=inner,proto3" json:"inner,omitempty"`
	// can validate each repeated item too
	Ids [][]byte `protobuf:"bytes,8,rep,name=ids,proto3" json:"ids,omitempty"`
	// only validate if non-zero value
	MediaId string `protobuf:"bytes,9,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	// validate the max length of a string
	Description string `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	// validate the min length
	Password string `protobuf:"bytes,11,opt,name=password,proto3" json:"password,omitempty"`
	// You don't need to validate everything
	NoValidation string `protobuf:"bytes,12,opt,name=no_validation,json=noValidation,proto3" json:"no_validation,omitempty"`
	// Types that are valid to be assigned to ContactOneof:
	//	*ExampleMessage_Fax
	//	*ExampleMessage_Phone
	ContactOneof isExampleMessage_ContactOneof `protobuf_oneof:"contact_oneof"`
	// Required inner message
	MsgRequired *InnerMessage `protobuf:"bytes,15,opt,name=msg_required,json=msgRequired,proto3" json:"msg_required,omitempty"`
	// returns an error if the string cannot be parsed as a legacy id
	LegacyId string `protobuf:"bytes,16,opt,name=legacy_id,json=legacyId,proto3" json:"legacy_id,omitempty"`
	// InnerMessage can contain a legacy id too
	InnerLegacyId *InnerMessageWithLegacyId `protobuf:"bytes,17,opt,name=inner_legacy_id,json=innerLegacyId,proto3" json:"inner_legacy_id,omitempty"`
	// Trim leading and trailing whitespaces (as defined by Unicode) before doing length check
	Name          string                        `protobuf:"bytes,18,opt,name=name,proto3" json:"name,omitempty"`
	NestedMessage *ExampleMessage_NestedMessage `protobuf:"bytes,19,opt,name=nested_message,json=nestedMessage,proto3" json:"nested_message,omitempty"`
	NotSupported  map[string]string             `protobuf:"bytes,100,rep,name=not_supported,json=notSupported,proto3" json:"not_supported,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// strings can validate against a regular expresion
	Url                            string                    `protobuf:"bytes,21,opt,name=url,proto3" json:"url,omitempty"`
	ContactsWithLengthConstraint   []*ExampleMessage_Contact `protobuf:"bytes,22,rep,name=contacts_with_length_constraint,json=contactsWithLengthConstraint,proto3" json:"contacts_with_length_constraint,omitempty"`
	ContactsWithNoLengthConstraint []*ExampleMessage_Contact `protobuf:"bytes,23,rep,name=contacts_with_no_length_constraint,json=contactsWithNoLengthConstraint,proto3" json:"contacts_with_no_length_constraint,omitempty"`
	XXX_NoUnkeyedLiteral           struct{}                  `json:"-"`
	XXX_unrecognized               []byte                    `json:"-"`
	XXX_sizecache                  int32                     `json:"-"`
}

func (m *ExampleMessage) Reset()         { *m = ExampleMessage{} }
func (m *ExampleMessage) String() string { return proto.CompactTextString(m) }
func (*ExampleMessage) ProtoMessage()    {}
func (*ExampleMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{0}
}

func (m *ExampleMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExampleMessage.Unmarshal(m, b)
}
func (m *ExampleMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExampleMessage.Marshal(b, m, deterministic)
}
func (m *ExampleMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExampleMessage.Merge(m, src)
}
func (m *ExampleMessage) XXX_Size() int {
	return xxx_messageInfo_ExampleMessage.Size(m)
}
func (m *ExampleMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ExampleMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ExampleMessage proto.InternalMessageInfo

func (m *ExampleMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ExampleMessage) GetUserId() []byte {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *ExampleMessage) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ExampleMessage) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *ExampleMessage) GetSpeed() int64 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *ExampleMessage) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *ExampleMessage) GetInner() *InnerMessage {
	if m != nil {
		return m.Inner
	}
	return nil
}

func (m *ExampleMessage) GetIds() [][]byte {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *ExampleMessage) GetMediaId() string {
	if m != nil {
		return m.MediaId
	}
	return ""
}

func (m *ExampleMessage) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ExampleMessage) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ExampleMessage) GetNoValidation() string {
	if m != nil {
		return m.NoValidation
	}
	return ""
}

type isExampleMessage_ContactOneof interface {
	isExampleMessage_ContactOneof()
}

type ExampleMessage_Fax struct {
	Fax string `protobuf:"bytes,13,opt,name=fax,proto3,oneof"`
}

type ExampleMessage_Phone struct {
	Phone string `protobuf:"bytes,14,opt,name=phone,proto3,oneof"`
}

func (*ExampleMessage_Fax) isExampleMessage_ContactOneof() {}

func (*ExampleMessage_Phone) isExampleMessage_ContactOneof() {}

func (m *ExampleMessage) GetContactOneof() isExampleMessage_ContactOneof {
	if m != nil {
		return m.ContactOneof
	}
	return nil
}

func (m *ExampleMessage) GetFax() string {
	if x, ok := m.GetContactOneof().(*ExampleMessage_Fax); ok {
		return x.Fax
	}
	return ""
}

func (m *ExampleMessage) GetPhone() string {
	if x, ok := m.GetContactOneof().(*ExampleMessage_Phone); ok {
		return x.Phone
	}
	return ""
}

func (m *ExampleMessage) GetMsgRequired() *InnerMessage {
	if m != nil {
		return m.MsgRequired
	}
	return nil
}

func (m *ExampleMessage) GetLegacyId() string {
	if m != nil {
		return m.LegacyId
	}
	return ""
}

func (m *ExampleMessage) GetInnerLegacyId() *InnerMessageWithLegacyId {
	if m != nil {
		return m.InnerLegacyId
	}
	return nil
}

func (m *ExampleMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ExampleMessage) GetNestedMessage() *ExampleMessage_NestedMessage {
	if m != nil {
		return m.NestedMessage
	}
	return nil
}

func (m *ExampleMessage) GetNotSupported() map[string]string {
	if m != nil {
		return m.NotSupported
	}
	return nil
}

func (m *ExampleMessage) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ExampleMessage) GetContactsWithLengthConstraint() []*ExampleMessage_Contact {
	if m != nil {
		return m.ContactsWithLengthConstraint
	}
	return nil
}

func (m *ExampleMessage) GetContactsWithNoLengthConstraint() []*ExampleMessage_Contact {
	if m != nil {
		return m.ContactsWithNoLengthConstraint
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ExampleMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ExampleMessage_Fax)(nil),
		(*ExampleMessage_Phone)(nil),
	}
}

type ExampleMessage_NestedMessage struct {
	Val                  string   `protobuf:"bytes,1,opt,name=val,proto3" json:"val,omitempty"`
	NestedEmail          string   `protobuf:"bytes,2,opt,name=nested_email,json=nestedEmail,proto3" json:"nested_email,omitempty"`
	MemberEmails         []string `protobuf:"bytes,3,rep,name=member_emails,json=memberEmails,proto3" json:"member_emails,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExampleMessage_NestedMessage) Reset()         { *m = ExampleMessage_NestedMessage{} }
func (m *ExampleMessage_NestedMessage) String() string { return proto.CompactTextString(m) }
func (*ExampleMessage_NestedMessage) ProtoMessage()    {}
func (*ExampleMessage_NestedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{0, 0}
}

func (m *ExampleMessage_NestedMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExampleMessage_NestedMessage.Unmarshal(m, b)
}
func (m *ExampleMessage_NestedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExampleMessage_NestedMessage.Marshal(b, m, deterministic)
}
func (m *ExampleMessage_NestedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExampleMessage_NestedMessage.Merge(m, src)
}
func (m *ExampleMessage_NestedMessage) XXX_Size() int {
	return xxx_messageInfo_ExampleMessage_NestedMessage.Size(m)
}
func (m *ExampleMessage_NestedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ExampleMessage_NestedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ExampleMessage_NestedMessage proto.InternalMessageInfo

func (m *ExampleMessage_NestedMessage) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

func (m *ExampleMessage_NestedMessage) GetNestedEmail() string {
	if m != nil {
		return m.NestedEmail
	}
	return ""
}

func (m *ExampleMessage_NestedMessage) GetMemberEmails() []string {
	if m != nil {
		return m.MemberEmails
	}
	return nil
}

type ExampleMessage_NestedMessage_InnerNestedMessage struct {
	InnerVal             string   `protobuf:"bytes,1,opt,name=inner_val,json=innerVal,proto3" json:"inner_val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExampleMessage_NestedMessage_InnerNestedMessage) Reset() {
	*m = ExampleMessage_NestedMessage_InnerNestedMessage{}
}
func (m *ExampleMessage_NestedMessage_InnerNestedMessage) String() string {
	return proto.CompactTextString(m)
}
func (*ExampleMessage_NestedMessage_InnerNestedMessage) ProtoMessage() {}
func (*ExampleMessage_NestedMessage_InnerNestedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{0, 0, 0}
}

func (m *ExampleMessage_NestedMessage_InnerNestedMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExampleMessage_NestedMessage_InnerNestedMessage.Unmarshal(m, b)
}
func (m *ExampleMessage_NestedMessage_InnerNestedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExampleMessage_NestedMessage_InnerNestedMessage.Marshal(b, m, deterministic)
}
func (m *ExampleMessage_NestedMessage_InnerNestedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExampleMessage_NestedMessage_InnerNestedMessage.Merge(m, src)
}
func (m *ExampleMessage_NestedMessage_InnerNestedMessage) XXX_Size() int {
	return xxx_messageInfo_ExampleMessage_NestedMessage_InnerNestedMessage.Size(m)
}
func (m *ExampleMessage_NestedMessage_InnerNestedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ExampleMessage_NestedMessage_InnerNestedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ExampleMessage_NestedMessage_InnerNestedMessage proto.InternalMessageInfo

func (m *ExampleMessage_NestedMessage_InnerNestedMessage) GetInnerVal() string {
	if m != nil {
		return m.InnerVal
	}
	return ""
}

type ExampleMessage_Contact struct {
	Phone                string   `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExampleMessage_Contact) Reset()         { *m = ExampleMessage_Contact{} }
func (m *ExampleMessage_Contact) String() string { return proto.CompactTextString(m) }
func (*ExampleMessage_Contact) ProtoMessage()    {}
func (*ExampleMessage_Contact) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{0, 2}
}

func (m *ExampleMessage_Contact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExampleMessage_Contact.Unmarshal(m, b)
}
func (m *ExampleMessage_Contact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExampleMessage_Contact.Marshal(b, m, deterministic)
}
func (m *ExampleMessage_Contact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExampleMessage_Contact.Merge(m, src)
}
func (m *ExampleMessage_Contact) XXX_Size() int {
	return xxx_messageInfo_ExampleMessage_Contact.Size(m)
}
func (m *ExampleMessage_Contact) XXX_DiscardUnknown() {
	xxx_messageInfo_ExampleMessage_Contact.DiscardUnknown(m)
}

var xxx_messageInfo_ExampleMessage_Contact proto.InternalMessageInfo

func (m *ExampleMessage_Contact) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *ExampleMessage_Contact) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type OuterMessageUsingNestedMessage struct {
	SomeMessage          *ExampleMessage_NestedMessage `protobuf:"bytes,1,opt,name=some_message,json=someMessage,proto3" json:"some_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *OuterMessageUsingNestedMessage) Reset()         { *m = OuterMessageUsingNestedMessage{} }
func (m *OuterMessageUsingNestedMessage) String() string { return proto.CompactTextString(m) }
func (*OuterMessageUsingNestedMessage) ProtoMessage()    {}
func (*OuterMessageUsingNestedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{1}
}

func (m *OuterMessageUsingNestedMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OuterMessageUsingNestedMessage.Unmarshal(m, b)
}
func (m *OuterMessageUsingNestedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OuterMessageUsingNestedMessage.Marshal(b, m, deterministic)
}
func (m *OuterMessageUsingNestedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OuterMessageUsingNestedMessage.Merge(m, src)
}
func (m *OuterMessageUsingNestedMessage) XXX_Size() int {
	return xxx_messageInfo_OuterMessageUsingNestedMessage.Size(m)
}
func (m *OuterMessageUsingNestedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_OuterMessageUsingNestedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_OuterMessageUsingNestedMessage proto.InternalMessageInfo

func (m *OuterMessageUsingNestedMessage) GetSomeMessage() *ExampleMessage_NestedMessage {
	if m != nil {
		return m.SomeMessage
	}
	return nil
}

type InnerMessage struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InnerMessage) Reset()         { *m = InnerMessage{} }
func (m *InnerMessage) String() string { return proto.CompactTextString(m) }
func (*InnerMessage) ProtoMessage()    {}
func (*InnerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{2}
}

func (m *InnerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InnerMessage.Unmarshal(m, b)
}
func (m *InnerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InnerMessage.Marshal(b, m, deterministic)
}
func (m *InnerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InnerMessage.Merge(m, src)
}
func (m *InnerMessage) XXX_Size() int {
	return xxx_messageInfo_InnerMessage.Size(m)
}
func (m *InnerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_InnerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_InnerMessage proto.InternalMessageInfo

func (m *InnerMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type InnerMessageWithLegacyId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InnerMessageWithLegacyId) Reset()         { *m = InnerMessageWithLegacyId{} }
func (m *InnerMessageWithLegacyId) String() string { return proto.CompactTextString(m) }
func (*InnerMessageWithLegacyId) ProtoMessage()    {}
func (*InnerMessageWithLegacyId) Descriptor() ([]byte, []int) {
	return fileDescriptor_15a1dc8d40dadaa6, []int{3}
}

func (m *InnerMessageWithLegacyId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InnerMessageWithLegacyId.Unmarshal(m, b)
}
func (m *InnerMessageWithLegacyId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InnerMessageWithLegacyId.Marshal(b, m, deterministic)
}
func (m *InnerMessageWithLegacyId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InnerMessageWithLegacyId.Merge(m, src)
}
func (m *InnerMessageWithLegacyId) XXX_Size() int {
	return xxx_messageInfo_InnerMessageWithLegacyId.Size(m)
}
func (m *InnerMessageWithLegacyId) XXX_DiscardUnknown() {
	xxx_messageInfo_InnerMessageWithLegacyId.DiscardUnknown(m)
}

var xxx_messageInfo_InnerMessageWithLegacyId proto.InternalMessageInfo

func (m *InnerMessageWithLegacyId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*ExampleMessage)(nil), "example.ExampleMessage")
	proto.RegisterMapType((map[string]string)(nil), "example.ExampleMessage.NotSupportedEntry")
	proto.RegisterType((*ExampleMessage_NestedMessage)(nil), "example.ExampleMessage.NestedMessage")
	proto.RegisterType((*ExampleMessage_NestedMessage_InnerNestedMessage)(nil), "example.ExampleMessage.NestedMessage.InnerNestedMessage")
	proto.RegisterType((*ExampleMessage_Contact)(nil), "example.ExampleMessage.Contact")
	proto.RegisterType((*OuterMessageUsingNestedMessage)(nil), "example.OuterMessageUsingNestedMessage")
	proto.RegisterType((*InnerMessage)(nil), "example.InnerMessage")
	proto.RegisterType((*InnerMessageWithLegacyId)(nil), "example.InnerMessageWithLegacyId")
}

func init() {
	proto.RegisterFile("example.proto", fileDescriptor_15a1dc8d40dadaa6)
}

var fileDescriptor_15a1dc8d40dadaa6 = []byte{
	// 1014 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xcf, 0x6f, 0x1b, 0x45,
	0x14, 0xce, 0x7a, 0xed, 0xc4, 0x79, 0xb6, 0x93, 0x76, 0x68, 0xcb, 0xca, 0x2a, 0x59, 0xc7, 0x29,
	0xed, 0x3a, 0x96, 0xd7, 0x4d, 0xb8, 0x40, 0x04, 0xb8, 0x72, 0x14, 0x29, 0x41, 0x21, 0x48, 0x53,
	0x51, 0x24, 0x70, 0x58, 0x6d, 0xbc, 0x13, 0x7b, 0xa9, 0x77, 0xc7, 0xec, 0x8c, 0x93, 0x06, 0x0a,
	0x82, 0x6b, 0x0e, 0x88, 0x23, 0x47, 0x8e, 0x1c, 0x7b, 0xe0, 0x90, 0x23, 0xe2, 0xc4, 0x31, 0x47,
	0xc4, 0xa9, 0xc7, 0x4a, 0x7b, 0xe3, 0x2f, 0x40, 0x33, 0xb3, 0xde, 0xc4, 0x10, 0x03, 0xbd, 0xed,
	0x7c, 0xef, 0x7b, 0x3f, 0xe6, 0xbd, 0x7d, 0xdf, 0x40, 0x89, 0x3c, 0x71, 0x83, 0xe1, 0x80, 0xd8,
	0xc3, 0x88, 0x72, 0x8a, 0xe6, 0x92, 0x63, 0xb9, 0xca, 0xd6, 0xd6, 0x9b, 0x12, 0x3b, 0x18, 0x1d,
	0xaa, 0x8f, 0xe6, 0x91, 0x3b, 0xf0, 0x3d, 0x97, 0xd3, 0x48, 0x91, 0xab, 0xbf, 0x16, 0x61, 0x61,
	0x4b, 0xf1, 0xdf, 0x27, 0x8c, 0xb9, 0x3d, 0x82, 0x6e, 0x40, 0xc6, 0xf7, 0x0c, 0xad, 0xa2, 0x59,
	0xf3, 0xed, 0xec, 0x37, 0xb1, 0xa9, 0xe1, 0x8c, 0xef, 0xa1, 0xd7, 0x60, 0x6e, 0xc4, 0x48, 0xe4,
	0xf8, 0x9e, 0x91, 0xa9, 0x68, 0x56, 0x31, 0x31, 0xcd, 0x0a, 0x70, 0xc7, 0x43, 0xb7, 0x21, 0x47,
	0x02, 0xd7, 0x1f, 0x18, 0xba, 0xf4, 0x9b, 0xfd, 0x33, 0x36, 0x33, 0x79, 0x0d, 0x2b, 0x10, 0xdd,
	0x02, 0xdd, 0xed, 0x11, 0x23, 0x5b, 0xd1, 0xac, 0x5c, 0x3b, 0xfb, 0x7d, 0x6c, 0xce, 0x60, 0x01,
	0xa0, 0x32, 0xe4, 0xd8, 0x90, 0x10, 0xcf, 0xc8, 0x55, 0x34, 0x4b, 0x6f, 0x67, 0x7f, 0x88, 0xcd,
	0x10, 0x2b, 0x08, 0x2d, 0x41, 0x8e, 0x75, 0x69, 0x44, 0x8c, 0x59, 0xe9, 0x95, 0xff, 0x31, 0x36,
	0x67, 0x7e, 0x8a, 0x4d, 0x0f, 0x2b, 0x18, 0xd5, 0x21, 0xe7, 0x87, 0x21, 0x89, 0x8c, 0xb9, 0x8a,
	0x66, 0x15, 0xd6, 0x6f, 0xda, 0xe3, 0x2e, 0xec, 0x08, 0x34, 0xb9, 0x0c, 0x56, 0x1c, 0x51, 0x80,
	0xef, 0x31, 0x23, 0x5f, 0xd1, 0xd3, 0xca, 0x05, 0x80, 0x56, 0x20, 0x1f, 0x10, 0xcf, 0x77, 0xc5,
	0xb5, 0xe6, 0x65, 0xe5, 0x79, 0x61, 0xfc, 0x45, 0x10, 0xe6, 0xa4, 0x65, 0xc7, 0x43, 0xf7, 0xa0,
	0xe0, 0x11, 0xd6, 0x8d, 0xfc, 0x21, 0xf7, 0x69, 0x68, 0x80, 0xe4, 0xe5, 0xce, 0x62, 0xf3, 0x7c,
	0x11, 0x5f, 0xb6, 0xa0, 0x0a, 0xe4, 0x87, 0x2e, 0x63, 0xc7, 0x34, 0xf2, 0x8c, 0x82, 0xea, 0xdf,
	0xb3, 0xd8, 0xcc, 0xe3, 0x14, 0x45, 0x2b, 0x50, 0x0a, 0xa9, 0x93, 0x0c, 0x41, 0x04, 0x2b, 0x0a,
	0x1a, 0x2e, 0x86, 0xf4, 0x51, 0x8a, 0x21, 0x04, 0xfa, 0xa1, 0xfb, 0xc4, 0x28, 0x09, 0xd3, 0xf6,
	0x0c, 0x16, 0x07, 0xd1, 0xdf, 0x61, 0x9f, 0x86, 0xc4, 0x58, 0x48, 0xe3, 0x16, 0xb6, 0x67, 0xb0,
	0x02, 0xd1, 0xbb, 0x50, 0x0c, 0x58, 0xcf, 0x89, 0xc8, 0xe7, 0x23, 0x3f, 0x22, 0x9e, 0xb1, 0xf8,
	0x2f, 0x2d, 0x69, 0x67, 0x7f, 0x13, 0xb7, 0x2b, 0x04, 0xac, 0x87, 0x13, 0x3e, 0x5a, 0x86, 0xf9,
	0x01, 0xe9, 0xb9, 0xdd, 0x13, 0xd1, 0x87, 0x6b, 0x2a, 0xc3, 0xb9, 0x60, 0xe5, 0x15, 0xbc, 0xe3,
	0xa1, 0x1d, 0x58, 0x94, 0xad, 0x74, 0x2e, 0x88, 0xd7, 0x65, 0x96, 0xe5, 0x2b, 0xb3, 0x7c, 0xe4,
	0xf3, 0xfe, 0x6e, 0xe2, 0x8b, 0x4b, 0xd2, 0x73, 0x7c, 0x44, 0x15, 0xc8, 0x86, 0x6e, 0x40, 0x0c,
	0x24, 0x13, 0x15, 0x9f, 0xc5, 0xe6, 0xec, 0x59, 0x6c, 0xc2, 0xef, 0x22, 0xa1, 0xb4, 0xa0, 0x5d,
	0x58, 0x08, 0x09, 0xe3, 0xc4, 0x73, 0x02, 0x15, 0xce, 0x78, 0x45, 0xe6, 0x7a, 0x3d, 0xcd, 0x35,
	0xf9, 0xcf, 0xda, 0x7b, 0x92, 0x3d, 0x1e, 0x7a, 0x29, 0xbc, 0x7c, 0x44, 0x7b, 0xa2, 0xe9, 0xdc,
	0x61, 0xa3, 0xe1, 0x90, 0x46, 0x9c, 0x78, 0x86, 0x57, 0xd1, 0xad, 0xc2, 0x7a, 0x6d, 0x6a, 0x30,
	0xca, 0x1f, 0x8e, 0xb9, 0x5b, 0x21, 0x8f, 0x4e, 0xc4, 0x7c, 0x2e, 0x20, 0xf4, 0x36, 0xe8, 0xa3,
	0x68, 0x60, 0xdc, 0x94, 0xe5, 0xaf, 0x9e, 0xc6, 0xe6, 0xdd, 0x3e, 0xe7, 0x43, 0xb6, 0xd1, 0x69,
	0x76, 0x9a, 0xc7, 0xc7, 0xc7, 0x1d, 0x9b, 0xb9, 0x87, 0x84, 0x9f, 0x74, 0x47, 0x03, 0x3e, 0x8a,
	0x48, 0xc7, 0xb6, 0x7c, 0xfa, 0xb4, 0x4b, 0x83, 0x1a, 0x16, 0x6e, 0x68, 0x08, 0x66, 0x97, 0x86,
	0xdc, 0xed, 0x72, 0xe6, 0x1c, 0xfb, 0xbc, 0xef, 0x0c, 0x48, 0xd8, 0xe3, 0x7d, 0xa7, 0x4b, 0x43,
	0xc6, 0x23, 0xd7, 0x0f, 0xb9, 0x71, 0x4b, 0xd6, 0x67, 0x4e, 0xab, 0x6f, 0x53, 0xb9, 0xb7, 0xf3,
	0xcf, 0x63, 0x53, 0x7b, 0x11, 0x9b, 0x80, 0x6f, 0x8f, 0x23, 0xaa, 0xb6, 0x8b, 0x78, 0x9b, 0x69,
	0x38, 0xf4, 0x18, 0xaa, 0x93, 0x19, 0x43, 0x7a, 0x45, 0xd2, 0x57, 0xff, 0x57, 0x52, 0xbc, 0x74,
	0x39, 0xd5, 0x1e, 0xfd, 0x7b, 0xb2, 0xf2, 0x1f, 0x19, 0x28, 0x4d, 0x4c, 0x03, 0x2d, 0x81, 0x7e,
	0xe4, 0x0e, 0x12, 0x41, 0x11, 0xd3, 0xd6, 0xce, 0x62, 0xd3, 0x92, 0xd3, 0x16, 0x06, 0xb4, 0x06,
	0xc5, 0x64, 0xd8, 0x4a, 0x41, 0x32, 0x92, 0xb8, 0x70, 0x1a, 0x9b, 0x60, 0xd7, 0x3b, 0x0f, 0xec,
	0x7a, 0xc7, 0xb6, 0xeb, 0xb8, 0xa0, 0x38, 0x5b, 0x52, 0x4f, 0x7e, 0xd6, 0xa0, 0x14, 0x90, 0xe0,
	0x80, 0x44, 0xca, 0x87, 0x19, 0x7a, 0x45, 0xb7, 0xe6, 0xdb, 0xdf, 0x69, 0xa7, 0xb1, 0xf9, 0xad,
	0xf6, 0x89, 0xdb, 0xf8, 0xe2, 0x7e, 0xe3, 0xad, 0xe5, 0x95, 0x3b, 0x77, 0xef, 0xad, 0xd6, 0x9b,
	0xef, 0xb4, 0x3e, 0x75, 0xbe, 0x7c, 0xfa, 0xd5, 0xd7, 0x8d, 0xfd, 0xba, 0xd5, 0xda, 0xe8, 0xd8,
	0xd3, 0xcd, 0xb5, 0xd5, 0x07, 0x56, 0x6b, 0x23, 0xb1, 0xef, 0x5f, 0x7c, 0x36, 0xf6, 0x57, 0xc7,
	0x60, 0xad, 0xd5, 0xb1, 0x6b, 0xf5, 0xff, 0xa0, 0x3c, 0x8f, 0xcd, 0xcc, 0x8b, 0xd8, 0xcc, 0xe1,
	0xa2, 0xaa, 0x52, 0x56, 0xcd, 0xca, 0x2d, 0x40, 0x72, 0x47, 0x26, 0xfb, 0x53, 0x83, 0x79, 0xb5,
	0x59, 0xd3, 0xba, 0x94, 0x97, 0xe6, 0x47, 0xee, 0xa0, 0xdc, 0x82, 0xeb, 0xff, 0xf8, 0x39, 0xd1,
	0x35, 0xd0, 0x1f, 0x93, 0x13, 0xe5, 0x89, 0xc5, 0x27, 0xba, 0x01, 0xb9, 0x23, 0x77, 0x30, 0x22,
	0xaa, 0x95, 0x58, 0x1d, 0x36, 0x32, 0x6f, 0x6a, 0xe5, 0x4d, 0x98, 0x4b, 0x06, 0x29, 0xb4, 0x57,
	0x29, 0x4a, 0xa2, 0xf4, 0x52, 0xf3, 0x12, 0x3d, 0x49, 0xd5, 0x3c, 0x73, 0x85, 0x9a, 0xb7, 0x17,
	0xa1, 0x94, 0xfc, 0x04, 0x0e, 0x0d, 0x09, 0x3d, 0xac, 0x7e, 0x06, 0x4b, 0x1f, 0x8c, 0x78, 0xba,
	0xfb, 0x1f, 0x32, 0x3f, 0xec, 0x4d, 0xde, 0x71, 0x1b, 0x8a, 0x8c, 0x06, 0x24, 0x5d, 0x67, 0xed,
	0x65, 0xd6, 0xb9, 0x20, 0x5c, 0x93, 0x43, 0xf5, 0x0e, 0x14, 0x2f, 0xeb, 0xcc, 0xd5, 0xaf, 0x55,
	0xf5, 0x3e, 0x18, 0xd3, 0xd4, 0x68, 0xd2, 0xe3, 0x3c, 0xf1, 0x68, 0xef, 0x7e, 0xfc, 0x5e, 0xcf,
	0xe7, 0xfd, 0xd1, 0x81, 0xdd, 0xa5, 0x41, 0xf3, 0xa1, 0xdc, 0xe0, 0x4d, 0xb5, 0xc1, 0x4d, 0xb6,
	0xb6, 0xde, 0x50, 0xcf, 0xe7, 0xe4, 0x6b, 0xda, 0x6d, 0xf4, 0x48, 0xd8, 0xe8, 0xd1, 0xf4, 0x51,
	0x6d, 0x26, 0xf7, 0x39, 0x98, 0x95, 0xf6, 0x37, 0xfe, 0x0a, 0x00, 0x00, 0xff, 0xff, 0xa0, 0xe8,
	0xce, 0xa9, 0x9b, 0x07, 0x00, 0x00,
}
