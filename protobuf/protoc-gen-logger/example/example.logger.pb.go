// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: example.proto

package example

import reflect "reflect"
import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/SafetyCulture/s12-proto/protobuf/s12proto"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *ExampleMessage) LogPayload(logger interface {
	Debug(args ...interface{})
	Info(args ...interface{})
	Warn(args ...interface{})
	Error(args ...interface{})
	Fatal(args ...interface{})
	Panic(args ...interface{})
	Trace(args ...interface{})
}) {
	logger.Debug(this.Id)
	logger.Error(this.Password)
	logger.Info(this.SomeKindOfInnerValue)
	if reflect.TypeOf(this.TestOneof) == reflect.TypeOf(&ExampleMessage_OneOf2{}) {
		logger.Error(this.TestOneof)
	}
}
func (this *OneOfMessage) LogPayload(logger interface {
	Debug(args ...interface{})
	Info(args ...interface{})
	Warn(args ...interface{})
	Error(args ...interface{})
	Fatal(args ...interface{})
	Panic(args ...interface{})
	Trace(args ...interface{})
}) {
}
func (this *InnerMessage) LogPayload(logger interface {
	Debug(args ...interface{})
	Info(args ...interface{})
	Warn(args ...interface{})
	Error(args ...interface{})
	Fatal(args ...interface{})
	Panic(args ...interface{})
	Trace(args ...interface{})
}) {
	logger.Debug(this.Body)
}
