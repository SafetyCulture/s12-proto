// Generated by the CRUX Service Client C++ plugin.
// If you make any local change, they will be lost.
// source: route_guide.proto

#include "route_guide.crux.client.pb.h"
#include "core/service_utils.hpp"

namespace routeguide {

RouteGuideClient::RouteGuideClient(const std::shared_ptr<RouteGuide::StubInterface>& stub) : mStub(stub) {}

Feature RouteGuideClient::GetFeature(const Point& request) const {
  Feature response;
  grpc::ClientContext context;
  grpc::Status status = stub->GetFeature(&context, request, &response);
  if (!status.ok()) {
    throw crux::ServiceException(status.error_code(), status.error_message());
  }
  return response;
}
std::vector<Feature> RouteGuideClient::ListFeatures(const Rectangle& request) const {
  std::vector<Feature> response;
  grpc::ClientContext context;
  Feature item;
  std::unique_ptr<grpc::ClientReaderInterface<Feature>> stream = stub->ListFeatures(&context, request);
  while (stream->Read(&item)) {
    response.emplace_back(item);
  }
  grpc::Status status = stream->Finish();
  if (!status.ok()) {
    throw crux::ServiceException(status.error_code(), status.error_message());
  }
  return response;
}

}

