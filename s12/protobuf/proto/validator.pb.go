// Copyright (c) 2020 SafetyCulture Pty Ltd. All Rights Reserved.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: s12/protobuf/proto/validator.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// EmailRules describe the constraints applied to `email` values
type EmailRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Set this as optional field (not required)
	// default = false
	Optional *bool `protobuf:"varint,1,opt,name=optional,def=0" json:"optional,omitempty"`
}

// Default values for EmailRules fields.
const (
	Default_EmailRules_Optional = bool(false)
)

func (x *EmailRules) Reset() {
	*x = EmailRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_s12_protobuf_proto_validator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailRules) ProtoMessage() {}

func (x *EmailRules) ProtoReflect() protoreflect.Message {
	mi := &file_s12_protobuf_proto_validator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailRules.ProtoReflect.Descriptor instead.
func (*EmailRules) Descriptor() ([]byte, []int) {
	return file_s12_protobuf_proto_validator_proto_rawDescGZIP(), []int{0}
}

func (x *EmailRules) GetOptional() bool {
	if x != nil && x.Optional != nil {
		return *x.Optional
	}
	return Default_EmailRules_Optional
}

var file_s12_protobuf_proto_validator_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         65200,
		Name:          "validator.uuid",
		Tag:           "varint,65200,opt,name=uuid",
		Filename:      "s12/protobuf/proto/validator.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         65201,
		Name:          "validator.regex",
		Tag:           "bytes,65201,opt,name=regex",
		Filename:      "s12/protobuf/proto/validator.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*int64)(nil),
		Field:         65202,
		Name:          "validator.int_gt",
		Tag:           "varint,65202,opt,name=int_gt",
		Filename:      "s12/protobuf/proto/validator.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*int64)(nil),
		Field:         65203,
		Name:          "validator.int_lt",
		Tag:           "varint,65203,opt,name=int_lt",
		Filename:      "s12/protobuf/proto/validator.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*int64)(nil),
		Field:         65204,
		Name:          "validator.int_gte",
		Tag:           "varint,65204,opt,name=int_gte",
		Filename:      "s12/protobuf/proto/validator.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*int64)(nil),
		Field:         65205,
		Name:          "validator.int_lte",
		Tag:           "varint,65205,opt,name=int_lte",
		Filename:      "s12/protobuf/proto/validator.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*int64)(nil),
		Field:         65206,
		Name:          "validator.length_gte",
		Tag:           "varint,65206,opt,name=length_gte",
		Filename:      "s12/protobuf/proto/validator.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*int64)(nil),
		Field:         65207,
		Name:          "validator.length_lte",
		Tag:           "varint,65207,opt,name=length_lte",
		Filename:      "s12/protobuf/proto/validator.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         65208,
		Name:          "validator.optional",
		Tag:           "varint,65208,opt,name=optional",
		Filename:      "s12/protobuf/proto/validator.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         65209,
		Name:          "validator.msg_required",
		Tag:           "varint,65209,opt,name=msg_required",
		Filename:      "s12/protobuf/proto/validator.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         65210,
		Name:          "validator.legacy_id",
		Tag:           "varint,65210,opt,name=legacy_id",
		Filename:      "s12/protobuf/proto/validator.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         65211,
		Name:          "validator.trim_len_check",
		Tag:           "varint,65211,opt,name=trim_len_check",
		Filename:      "s12/protobuf/proto/validator.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*int64)(nil),
		Field:         65212,
		Name:          "validator.repeated_len_gte",
		Tag:           "varint,65212,opt,name=repeated_len_gte",
		Filename:      "s12/protobuf/proto/validator.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*int64)(nil),
		Field:         65213,
		Name:          "validator.repeated_len_lte",
		Tag:           "varint,65213,opt,name=repeated_len_lte",
		Filename:      "s12/protobuf/proto/validator.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*EmailRules)(nil),
		Field:         65214,
		Name:          "validator.email",
		Tag:           "bytes,65214,opt,name=email",
		Filename:      "s12/protobuf/proto/validator.proto",
	},
}

// Extension fields to descriptorpb.FieldOptions.
var (
	// Field value validates to a 128 bit universally unique identifier.
	//
	// optional bool uuid = 65200;
	E_Uuid = &file_s12_protobuf_proto_validator_proto_extTypes[0]
	// Uses a Golang RE2-syntax regex to match the field contents.
	//
	// optional string regex = 65201;
	E_Regex = &file_s12_protobuf_proto_validator_proto_extTypes[1]
	// Field value of integer strictly greater than this value.
	//
	// optional int64 int_gt = 65202;
	E_IntGt = &file_s12_protobuf_proto_validator_proto_extTypes[2]
	// Field value of integer strictly smaller than this value.
	//
	// optional int64 int_lt = 65203;
	E_IntLt = &file_s12_protobuf_proto_validator_proto_extTypes[3]
	// Field value of integer greater than or equal to this value.
	//
	// optional int64 int_gte = 65204;
	E_IntGte = &file_s12_protobuf_proto_validator_proto_extTypes[4]
	// Field value of integer smaller than or equal to this value.
	//
	// optional int64 int_lte = 65205;
	E_IntLte = &file_s12_protobuf_proto_validator_proto_extTypes[5]
	// Field value of length greater than this value.
	//
	// optional int64 length_gte = 65206;
	E_LengthGte = &file_s12_protobuf_proto_validator_proto_extTypes[6]
	// Field value of length smaller than this value.
	//
	// optional int64 length_lte = 65207;
	E_LengthLte = &file_s12_protobuf_proto_validator_proto_extTypes[7]
	// Validation only applies to non-zero values.
	//
	// optional bool optional = 65208;
	E_Optional = &file_s12_protobuf_proto_validator_proto_extTypes[8]
	// Validates that an inner message is required.
	//
	// optional bool msg_required = 65209;
	E_MsgRequired = &file_s12_protobuf_proto_validator_proto_extTypes[9]
	// Field value that caters to an upper case universally unique identifier, uuid or a long id.
	//
	// optional bool legacy_id = 65210;
	E_LegacyId = &file_s12_protobuf_proto_validator_proto_extTypes[10]
	// Supplementary validation option to trim leading and trailing whitespaces (as defined by Unicode) before doing length check.
	//
	// optional bool trim_len_check = 65211;
	E_TrimLenCheck = &file_s12_protobuf_proto_validator_proto_extTypes[11]
	// collection size greater than or equal to this value.
	//
	// optional int64 repeated_len_gte = 65212;
	E_RepeatedLenGte = &file_s12_protobuf_proto_validator_proto_extTypes[12]
	// collection size lesser than or equal to this value.
	//
	// optional int64 repeated_len_lte = 65213;
	E_RepeatedLenLte = &file_s12_protobuf_proto_validator_proto_extTypes[13]
	// Uses a go-validator to determine a email address is a valid RFC 5322 address
	//
	// optional validator.EmailRules email = 65214;
	E_Email = &file_s12_protobuf_proto_validator_proto_extTypes[14]
)

var File_s12_protobuf_proto_validator_proto protoreflect.FileDescriptor

var file_s12_protobuf_proto_validator_proto_rawDesc = []byte{
	0x0a, 0x22, 0x73, 0x31, 0x32, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x1a,
	0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x2f, 0x0a, 0x0a, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12,
	0x21, 0x0a, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x3a, 0x33, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb0, 0xfd, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x3a, 0x35, 0x0a, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78,
	0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xb1, 0xfd, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78, 0x3a, 0x36,
	0x0a, 0x06, 0x69, 0x6e, 0x74, 0x5f, 0x67, 0x74, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb2, 0xfd, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x69, 0x6e, 0x74, 0x47, 0x74, 0x3a, 0x36, 0x0a, 0x06, 0x69, 0x6e, 0x74, 0x5f, 0x6c, 0x74,
	0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xb3, 0xfd, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x4c, 0x74, 0x3a, 0x38,
	0x0a, 0x07, 0x69, 0x6e, 0x74, 0x5f, 0x67, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb4, 0xfd, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x69, 0x6e, 0x74, 0x47, 0x74, 0x65, 0x3a, 0x38, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x5f,
	0x6c, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0xb5, 0xfd, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x4c,
	0x74, 0x65, 0x3a, 0x3e, 0x0a, 0x0a, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x5f, 0x67, 0x74, 0x65,
	0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xb6, 0xfd, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x47,
	0x74, 0x65, 0x3a, 0x3e, 0x0a, 0x0a, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x5f, 0x6c, 0x74, 0x65,
	0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xb7, 0xfd, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x4c,
	0x74, 0x65, 0x3a, 0x3b, 0x0a, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x1d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb8, 0xfd,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x3a,
	0x42, 0x0a, 0x0c, 0x6d, 0x73, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12,
	0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xb9,
	0xfd, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x3a, 0x3c, 0x0a, 0x09, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x5f, 0x69, 0x64,
	0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0xba, 0xfd, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x49,
	0x64, 0x3a, 0x45, 0x0a, 0x0e, 0x74, 0x72, 0x69, 0x6d, 0x5f, 0x6c, 0x65, 0x6e, 0x5f, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0xbb, 0xfd, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x74, 0x72, 0x69, 0x6d,
	0x4c, 0x65, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x3a, 0x49, 0x0a, 0x10, 0x72, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x6c, 0x65, 0x6e, 0x5f, 0x67, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xbc, 0xfd, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4c, 0x65, 0x6e,
	0x47, 0x74, 0x65, 0x3a, 0x49, 0x0a, 0x10, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x6c, 0x65, 0x6e, 0x5f, 0x6c, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xbd, 0xfd, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4c, 0x65, 0x6e, 0x4c, 0x74, 0x65, 0x3a, 0x4c,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xbe, 0xfd, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x37, 0x5a, 0x35,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x61, 0x66, 0x65, 0x74,
	0x79, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x73, 0x31, 0x32, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x73, 0x31, 0x32, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_s12_protobuf_proto_validator_proto_rawDescOnce sync.Once
	file_s12_protobuf_proto_validator_proto_rawDescData = file_s12_protobuf_proto_validator_proto_rawDesc
)

func file_s12_protobuf_proto_validator_proto_rawDescGZIP() []byte {
	file_s12_protobuf_proto_validator_proto_rawDescOnce.Do(func() {
		file_s12_protobuf_proto_validator_proto_rawDescData = protoimpl.X.CompressGZIP(file_s12_protobuf_proto_validator_proto_rawDescData)
	})
	return file_s12_protobuf_proto_validator_proto_rawDescData
}

var file_s12_protobuf_proto_validator_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_s12_protobuf_proto_validator_proto_goTypes = []interface{}{
	(*EmailRules)(nil),                // 0: validator.EmailRules
	(*descriptorpb.FieldOptions)(nil), // 1: google.protobuf.FieldOptions
}
var file_s12_protobuf_proto_validator_proto_depIdxs = []int32{
	1,  // 0: validator.uuid:extendee -> google.protobuf.FieldOptions
	1,  // 1: validator.regex:extendee -> google.protobuf.FieldOptions
	1,  // 2: validator.int_gt:extendee -> google.protobuf.FieldOptions
	1,  // 3: validator.int_lt:extendee -> google.protobuf.FieldOptions
	1,  // 4: validator.int_gte:extendee -> google.protobuf.FieldOptions
	1,  // 5: validator.int_lte:extendee -> google.protobuf.FieldOptions
	1,  // 6: validator.length_gte:extendee -> google.protobuf.FieldOptions
	1,  // 7: validator.length_lte:extendee -> google.protobuf.FieldOptions
	1,  // 8: validator.optional:extendee -> google.protobuf.FieldOptions
	1,  // 9: validator.msg_required:extendee -> google.protobuf.FieldOptions
	1,  // 10: validator.legacy_id:extendee -> google.protobuf.FieldOptions
	1,  // 11: validator.trim_len_check:extendee -> google.protobuf.FieldOptions
	1,  // 12: validator.repeated_len_gte:extendee -> google.protobuf.FieldOptions
	1,  // 13: validator.repeated_len_lte:extendee -> google.protobuf.FieldOptions
	1,  // 14: validator.email:extendee -> google.protobuf.FieldOptions
	0,  // 15: validator.email:type_name -> validator.EmailRules
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	15, // [15:16] is the sub-list for extension type_name
	0,  // [0:15] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_s12_protobuf_proto_validator_proto_init() }
func file_s12_protobuf_proto_validator_proto_init() {
	if File_s12_protobuf_proto_validator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_s12_protobuf_proto_validator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_s12_protobuf_proto_validator_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 15,
			NumServices:   0,
		},
		GoTypes:           file_s12_protobuf_proto_validator_proto_goTypes,
		DependencyIndexes: file_s12_protobuf_proto_validator_proto_depIdxs,
		MessageInfos:      file_s12_protobuf_proto_validator_proto_msgTypes,
		ExtensionInfos:    file_s12_protobuf_proto_validator_proto_extTypes,
	}.Build()
	File_s12_protobuf_proto_validator_proto = out.File
	file_s12_protobuf_proto_validator_proto_rawDesc = nil
	file_s12_protobuf_proto_validator_proto_goTypes = nil
	file_s12_protobuf_proto_validator_proto_depIdxs = nil
}
